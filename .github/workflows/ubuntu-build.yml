name: ubuntu
run-name: ${{ github.actor }} is building on ubuntu by GitHub Actions ðŸš€
on:   
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false
  push:

jobs:
  job:
    env:
      BUILD_TYPE: Release
      SYSTEM_LIB_DIR: /usr/lib/x86_64-linux-gnu
      VCPKG_DIR: ${{github.workspace}}/vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-linux
      VCPKG_COMMIT: 0fa8459cf3a7caca7adc58f992bc32ff13630684

    name: x64
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Show workspace files
        run: find . | grep -v '\.git' | grep -v vcpkg | grep -v include
        shell: bash

      # - name: Install deps
      #   uses: awalsh128/cache-apt-pkgs-action@latest
      #   with:
      #     packages: libprotobuf-dev protobuf-compiler libcurl4-openssl-dev
      #     version: 1.0
      #     execute_install_scripts: true
      - name: Setup vcpkg
        uses: lukka/run-vcpkg@main
        id: runvcpkg
        with:
          vcpkgDirectory: ${{ env.VCPKG_DIR }}
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT }}
      - name: Install deps
        run: |
          vcpkg install --triplet ${{env.VCPKG_DEFAULT_TRIPLET}} protobuf curl
          vcpkg integrate install

      - name: Run vuild
        env:
          VCPKG_ROOT: ${{ env.VCPKG_DIR }}
        run: |
            echo ${{env.VCPKG_ROOT}}
            ./package/linux/pkg.sh
        
      - name: Set target file name
        run: echo "TARGET_FILE=release/${{env.VCPKG_DEFAULT_TRIPLET}}-latest.tar.gz" >> "$GITHUB_ENV"

      - name: Compress
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          cwd: ./
          files: |
            ./out
          outPath: ${{env.TARGET_FILE}}

      - name: Test build example release
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release
          rm -rf build
        shell: bash
        working-directory: out

      - name: Test build example release
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Debug
          cmake --build build --config Debug
          rm -rf build
        shell: bash
        working-directory: out

      - name: Show release file
        run: |
          ls -lshtr ${{env.TARGET_FILE}}

      - name: Save as aritifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.VCPKG_DEFAULT_TRIPLET}}-latest-artifact
          path: ${{env.TARGET_FILE}}
          retention-days: 7
